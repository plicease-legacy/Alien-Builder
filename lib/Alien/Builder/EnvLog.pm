package Alien::Builder::EnvLog;

use strict;
use warnings;
use File::Spec;
use Config ();
use Data::Dumper ();
use constant path_sep => $Config::Config{path_sep};

# ABSTRACT: Environment log
# VERSION

=head1 SYNOPSIS

=head1 DESCRIPTION

=head1 CONSTRUCTOR

=head2 new

=cut

sub new
{
  my($class, %args) = @_;
  
  bless {
    env => {},
    shell_config_generate => eval {
      require Shell::Config::Generate;
      require Shell::Guess;
      my $config = Shell::Config::Generate->new;
      $config->comment(
        'This script sets the environment needed to build this package.',
        'generated by: ' . __FILE__,
      );
      $config;
    },
  }, $class;
}

=head1 METHODS

=head2 prepend_path

=cut

sub prepend_path
{
  my($self, $name, $path) = @_;

  if(my $config = $self->{shell_config_generate})
  {
    $config->prepend_path($name, $path);
  }
  
  $self->{env}->{$name} = join( path_sep, $path, 
    defined $self->{env}->{$name} ? $self->{env}->{$name} : $ENV{$name}
  );
  
  $self;
}

=head2 set

=cut

sub set
{
  my($self, $name, $value) = @_;

  if(my $config = $self->{shell_config_generate})
  {
    $config->set($name, $value);
  }
  
  $self->{env}->{$name} = $value;
  
  $self;
}

=head2 write_log

=cut

sub write_log
{
  my($self, $dir) = @_;
  
  if(my $config = $self->{shell_config_generate})
  {
    if($^O eq 'MSWin32')
    {
      $config->generate_file(
        Shell::Guess->command_shell => File::Spec->catfile($dir, 'env.bat')
      );
      $config->generate_file(
        Shell::Guess->cmd_shell     => File::Spec->catfile($dir, 'env.cmd')
      );
      $config->generate_file(
        Shell::Guess->power_shell   => File::Spec->catfile($dir, 'env.ps1')
      );
    }
    else
    {
      $config->generate_file(
        Shell::Guess->bourne_shell  => File::Spec->catfile($dir, 'env.sh')
      );
      $config->generate_file(
        Shell::Guess->c_shell       => File::Spec->catfile($dir, 'env.csh')
      );
    }
  }
  
  my $filename = File::Spec->catfile($dir, 'env.pl');
  open my $fh, '>', $filename;
  print $fh Data::Dumper->new([$self->{env}], ['*ENV'])->Dump;
  if($^O eq 'MSWin32')
  {
    print $fh 'system("command.com");', "\n";
  }
  else
  {
    print $fh 'system("/bin/sh")', "\n";
  }
  close $fh;
  
  $self;
}

1;
